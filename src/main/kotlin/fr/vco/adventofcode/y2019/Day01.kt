package fr.vco.adventofcode.y2019

import fr.vco.adventofcode.getInputReader

fun main() {

    val input = getInputReader("121165\n64000\n119723\n91886\n63259\n85729\n59755\n61533\n62123\n143919\n130431\n53776\n106564\n65104\n141217\n127857\n101962\n103239\n62766\n132335\n62610\n93814\n75002\n122769\n90626\n88623\n132719\n93092\n92484\n143905\n148772\n58193\n97497\n114627\n145752\n53189\n69120\n135571\n53725\n83398\n95051\n109821\n77606\n55106\n118614\n142909\n136813\n91649\n127740\n148565\n101107\n132123\n52567\n53574\n139343\n75059\n74699\n65113\n136918\n59934\n114739\n56001\n68115\n132301\n116903\n120235\n71511\n60067\n75153\n52940\n130889\n119069\n62090\n92194\n116599\n145027\n105287\n103301\n69267\n119555\n64055\n93747\n80838\n72570\n59103\n75620\n138948\n108738\n96864\n74688\n86825\n107052\n66393\n55954\n119844\n69869\n109067\n55539\n94247\n69490\n")
    val fuels = input.readLines().map { it.toInt()/3-2}
    val totalFuel = fuels.sum()
    println("Part 1 : $totalFuel")

    val total2 = fuels.map{ totalFuel(it) }.sum()
    println("Part 2 : $total2")

}

fun totalFuel (fuel : Int) : Int {
    val fuelForFuel = fuel/3-2
    return if (fuelForFuel <=0) fuel
    else totalFuel(fuelForFuel) +fuel
}